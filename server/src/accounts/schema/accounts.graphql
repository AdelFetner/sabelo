type Account {
  id: ID!
  bankName: String!
  cbu: String!
  balance: Float!
  currency: String!
  alias: String
  user: User!
  createdAt: String!
  #   transactions: [Transaction!]
}

input UpdateAccountInput {
  bankName: String
  cbu: String
  currency: String
  alias: String
}

input RemoveAccountInput {
  id: ID!
}

type Query {
  accounts(userId: ID!, skip: Int, take: Int): [Account!]!
  account(id: ID!): Account
}

type Mutation {
  createAccount(input: CreateAccountInput!): Account!
  updateAccount(id: ID!, input: UpdateAccountInput!): Account!
  removeAccount(input: RemoveAccountInput!): Account!
}
